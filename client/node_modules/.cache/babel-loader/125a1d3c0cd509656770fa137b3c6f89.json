{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/auroral.css';\nimport '../styles/register.css';\n\nconst Register = ({\n  setAuth\n}) => {\n  _s();\n\n  const [input, setInput] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = input;\n\n  const updateInp = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitRegister = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        name,\n        email,\n        password\n      };\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (response.status === 401) {\n        alert('User with that email already exists');\n        return;\n      }\n\n      const parseRes = await response.json(); //have to save jwt token to local storage\n\n      localStorage.setItem('token', parseRes.token);\n      setAuth(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auroral-northern\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auroral-stars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reg-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"reg-form\",\n        onSubmit: submitRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          name: \"name\",\n          placeholder: \"name\",\n          onChange: updateInp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          onChange: updateInp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          onChange: updateInp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"iYdEbkN+OoOpQGYGw56yZk4cBdg=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/jwt-todo/client/src/components/Register.js"],"names":["React","useState","Register","setAuth","input","setInput","name","email","password","updateInp","e","target","value","submitRegister","preventDefault","body","response","fetch","method","headers","JSON","stringify","status","alert","parseRes","json","localStorage","setItem","token","error","console","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/auroral.css';\nimport '../styles/register.css';\n\nconst Register = ({ setAuth }) => {\n  const [input, setInput] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  const { name, email, password } = input;\n\n  const updateInp = (e) => {\n    setInput({...input, [e.target.name]: e.target.value});\n  }\n\n  const submitRegister = async(e) => {\n    e.preventDefault();\n\n    try {\n        const body = { name, email, password };\n\n        const response = await fetch(\"http://localhost:5000/auth/register\", {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n\n        if(response.status === 401) {\n          alert('User with that email already exists');\n          return;\n        }\n\n        const parseRes = await response.json();\n        \n        //have to save jwt token to local storage\n        localStorage.setItem('token', parseRes.token);\n        setAuth(true);\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\n  return (\n    <div className=\"wrapper\">\n        <div className=\"auroral-northern\"></div>\n        <div className=\"auroral-stars\"></div>\n        <div id=\"reg-wrap\">\n          <form id=\"reg-form\" onSubmit={submitRegister}>\n              <input type=\"name\" name=\"name\" placeholder=\"name\" onChange={updateInp}></input>\n              <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={updateInp}></input>\n              <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={updateInp}></input>\n              <button>Submit</button>\n          </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}