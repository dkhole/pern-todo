{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/pern-todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Todos from './components/Todos';\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  const isAuth = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    isAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Landing, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 71\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 76\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 117\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, { ...props,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 79\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 123\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/todos\",\n          render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Todos, { ...props,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 116\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/pern-todo/client/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","Landing","Login","Register","Todos","App","isAuthenticated","setIsAuthenticated","setAuth","boolean","isAuth","response","fetch","method","headers","token","localStorage","parseRes","json","error","console","message","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Todos from './components/Todos';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  }\n\n  const isAuth = async() => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token : localStorage.token }\n      });\n\n      const parseRes = await response.json();\n      \n      parseRes === true ? setIsAuthenticated(true): setIsAuthenticated(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  }, [])\n\n  return (\n    <Fragment>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\" render={props => !isAuthenticated ? <Landing {...props} /> : <Redirect to=\"/todos\" />} />\n            <Route exact path=\"/login\" render={props => !isAuthenticated ? <Login {...props} setAuth={setAuth} /> : <Redirect to=\"/todos\" />} />\n            <Route exact path=\"/register\" render={props => !isAuthenticated ? <Register {...props} setAuth={setAuth} /> : <Redirect to=\"/login\" />} />\n            <Route exact path=\"/todos\" render={props => isAuthenticated ? <Todos {...props} setAuth={setAuth} /> : <Redirect to=\"/login\" />} />\n          </Switch>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}