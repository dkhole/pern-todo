{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport CardList from './CardList';\n\nconst Todos = ({\n  setAuth\n}) => {\n  _s();\n\n  const [cardName, setCardName] = useState('');\n  const [cardList, setCardList] = useState([]);\n  const [todoName, setTodoName] = useState('');\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/todos\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await res.json();\n      const cards = parseRes.map(({\n        card_id,\n        card_name\n      }) => ({\n        card_id,\n        card_name\n      }));\n      setCardList(cards);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n\n  const createCard = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const body = {\n      cardName\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      setCardList([...cardList, parseRes[0]]);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteCard = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = e.target.parentElement.id;\n    const body = {\n      cardId\n    };\n    console.log(body);\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      console.log(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createTodo = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const body = {\n      todoName\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      console.log(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardList, {\n      cardList: cardList,\n      deleteCard: deleteCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCard,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"card\",\n        placeholder: \"Card title\",\n        onChange: e => setCardName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"todo\",\n        placeholder: \"Todo description\",\n        onChange: e => setTodoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"z3DLHNeLJAyHCAiLuWgUi/edV1s=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js"],"names":["React","Fragment","useEffect","useState","CardList","Todos","setAuth","cardName","setCardName","cardList","setCardList","todoName","setTodoName","fetchData","res","fetch","method","headers","token","localStorage","parseRes","json","cards","map","card_id","card_name","error","console","message","logout","e","preventDefault","removeItem","createCard","jsonHead","Headers","append","body","JSON","stringify","deleteCard","cardId","target","parentElement","id","log","createTodo","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport CardList from './CardList';\n\nconst Todos = ({ setAuth }) => {\n    const [cardName, setCardName] = useState('');\n    const [cardList, setCardList] = useState([]);\n    const [todoName, setTodoName] = useState('');\n\n    const fetchData = async() => {\n        try {\n            const res = await fetch(\"http://localhost:5000/todos\", {\n                method: \"GET\",\n                headers: { token: localStorage.token}\n            });\n\n            const parseRes = await res.json();\n            const cards = parseRes.map(({card_id, card_name}) => ({card_id, card_name}));\n            setCardList(cards);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(()=> {\n        fetchData();\n    }, []);\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('token');\n        setAuth(false);\n    }\n\n    const createCard = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {cardName};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            setCardList([...cardList, parseRes[0]]);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteCard = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const cardId = e.target.parentElement.id;\n        const body = {cardId};\n        console.log(body);\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            console.log(parseRes);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const createTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {todoName};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            console.log(parseRes);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    return (\n        <Fragment>\n            {/*<Card />*/}\n            <CardList cardList={cardList} deleteCard={deleteCard}/>\n            <form onSubmit={createCard}>\n                <input type=\"text\" name=\"card\" placeholder=\"Card title\" onChange={e => setCardName(e.target.value)}></input>\n                <button>Create Card</button>\n            </form>\n\n            <form onSubmit={createTodo}>\n                <input type=\"text\" name=\"todo\" placeholder=\"Todo description\" onChange={e => setTodoName(e.target.value)}></input>\n                <button>Create Todo</button>\n            </form>\n            \n            <button onClick={logout}>Logout</button>\n        </Fragment>\n    );\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}