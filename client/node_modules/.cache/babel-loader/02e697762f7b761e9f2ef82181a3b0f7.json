{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport CardList from './CardList';\nimport Card from './Card';\nimport '../styles/todo.css';\nimport { ReactComponent as Delete } from \"@svgr/webpack?-svgo,+titleProp,+ref!../imgs/x-mark.svg\";\n\nconst Todos = ({\n  setAuth\n}) => {\n  _s();\n\n  const [cardName, setCardName] = useState('');\n  const [cardList, setCardList] = useState([]);\n  const [todoName, setTodoName] = useState('');\n  const [mainCard, setMainCard] = useState({});\n  const [mainTodos, setMainTodos] = useState([]);\n  const [allTodos, setAllTodos] = useState([]);\n  const [viewTodos, setViewTodos] = useState(false);\n  const [username, setUsername] = useState('');\n  const [allCards, setAllCards] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/todos\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const [cards, todos] = await res.json();\n      setAllTodos(todos);\n      const listCards = cards.filter(c => c.card_id !== null);\n\n      if (listCards.length > 0) {\n        setCardList(listCards);\n        setMainCard(listCards[0]);\n\n        for (let i = 0; i < listCards.length; i++) {\n          listCards[i].todos = todos.filter(t => t.card_id === listCards[i].card_id && t.todo_title !== null);\n        }\n\n        setAllCards(listCards);\n      }\n\n      const todosMain = todos.filter(t => t.card_id === cards[0].card_id && t.todo_title !== null);\n      setMainTodos(todosMain);\n      setUsername(cards[0].user_name);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n\n  const createCard = async e => {\n    e.preventDefault();\n\n    if (cardName === '') {\n      return;\n    }\n\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const body = {\n      cardName\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      let parseRes = await res.json();\n      parseRes[0].todos = [];\n      setAllCards([...allCards, parseRes[0]]);\n      setCardName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteCard = async e => {\n    e.stopPropagation();\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = e.currentTarget.parentElement.parentElement.id;\n    const body = {\n      cardId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json();\n      const deleteCard = cardList.filter(c => c.card_id !== parseInt(cardId));\n      setAllCards(deleteCard);\n      /** \n      if(deleteCard[0]) {\n          setMainCard(deleteCard[0]);\n          const todosMain = allTodos.filter(t => t.card_id === deleteCard[0].card_id && t.todo_title !== null);\n          setMainTodos(todosMain);\n      } else {\n          setMainCard({});\n          setMainTodos([]);\n      }*/\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createTodo = async e => {\n    e.preventDefault();\n\n    if (todoName === '') {\n      return;\n    }\n\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const body = {\n      todoName,\n      cardId\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      setMainTodos([...mainTodos, parseRes.rows[0]]);\n      setAllTodos([...allTodos, parseRes.rows[0]]);\n      setTodoName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteTodo = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const todoId = e.target.parentElement.parentElement.id;\n    const body = {\n      cardId,\n      todoId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json();\n      const deleteTodo = mainTodos.filter(t => t.todo_id !== parseInt(todoId));\n      setMainTodos(deleteTodo);\n      const deleteAllTodo = allTodos.filter(t => t.todo_id !== parseInt(todoId));\n      setAllTodos(deleteAllTodo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const viewCard = e => {\n    const cardIndex = allCards.findIndex(c => c.card_id === parseInt(e.target.parentElement.id));\n    setMainCard(allCards[cardIndex]);\n    console.log(e.target.parentElement.id); //toggle if view card is true, if it is return main todos instead of cardlist\n\n    setViewTodos(true);\n  };\n\n  const viewCardList = () => {\n    setViewTodos(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: viewTodos ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todo-top\",\n        onClick: viewCardList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todo-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createTodo,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: todoName,\n            type: \"text\",\n            name: \"todo\",\n            placeholder: \"Todo title\",\n            onChange: e => setTodoName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-top-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Hello, \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-bot-wrap\",\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          allCards: allCards,\n          setAllCards: setAllCards,\n          deleteCard: deleteCard,\n          viewCard: viewCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createCard,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: cardName,\n            type: \"text\",\n            name: \"card\",\n            placeholder: \"Card title\",\n            onChange: e => setCardName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"NiGeURkMEImmMHAaV5vfTc033Qo=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js"],"names":["React","useEffect","useState","Fragment","CardList","Card","Todos","setAuth","cardName","setCardName","cardList","setCardList","todoName","setTodoName","mainCard","setMainCard","mainTodos","setMainTodos","allTodos","setAllTodos","viewTodos","setViewTodos","username","setUsername","allCards","setAllCards","fetchData","res","fetch","method","headers","token","localStorage","cards","todos","json","listCards","filter","c","card_id","length","i","t","todo_title","todosMain","user_name","error","console","message","logout","e","preventDefault","removeItem","createCard","jsonHead","Headers","append","body","JSON","stringify","parseRes","deleteCard","stopPropagation","cardId","currentTarget","parentElement","id","parseInt","createTodo","rows","deleteTodo","todoId","target","todo_id","deleteAllTodo","viewCard","cardIndex","findIndex","log","viewCardList","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport CardList from './CardList';\nimport Card from './Card';\nimport '../styles/todo.css';\nimport {ReactComponent as Delete} from '../imgs/x-mark.svg';\n\nconst Todos = ({ setAuth }) => {\n    const [cardName, setCardName] = useState('');\n    const [cardList, setCardList] = useState([]);\n    const [todoName, setTodoName] = useState('');\n    const [mainCard, setMainCard] = useState({});\n    const [mainTodos, setMainTodos] = useState([]); \n    const [allTodos, setAllTodos] = useState([]);\n    const [viewTodos, setViewTodos] = useState(false);\n    const [username, setUsername] = useState('');\n    const [allCards, setAllCards] = useState([]);\n\n    const fetchData = async() => {\n        try {\n            const res = await fetch(\"http://localhost:5000/todos\", {\n                method: \"GET\",\n                headers: { token: localStorage.token}\n            });\n\n            const [cards, todos] = await res.json();\n\n            setAllTodos(todos);\n            \n            const listCards = cards.filter(c => c.card_id !== null);\n\n            if(listCards.length > 0) {\n                setCardList(listCards);\n                setMainCard(listCards[0]);\n                \n                for(let i = 0; i < listCards.length; i++) {\n                    listCards[i].todos = todos.filter(t => t.card_id === listCards[i].card_id && t.todo_title !== null);\n                }\n                setAllCards(listCards);\n            }\n\n            const todosMain = todos.filter(t => t.card_id === cards[0].card_id && t.todo_title !== null);\n            setMainTodos(todosMain);\n            setUsername(cards[0].user_name);\n\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(()=> {\n        fetchData();\n    }, []);\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('token');\n        setAuth(false);\n    }\n\n    const createCard = async(e) => {\n        e.preventDefault();\n\n        if(cardName === '') {\n            return;\n        }\n        \n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {cardName};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            let parseRes = await res.json();\n            parseRes[0].todos = [];\n\n            setAllCards([...allCards, parseRes[0]]);\n            setCardName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteCard = async(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = e.currentTarget.parentElement.parentElement.id;\n        const body = {cardId};\n\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteCard = cardList.filter( c => c.card_id !== parseInt(cardId));\n            setAllCards(deleteCard);\n\n            /** \n            if(deleteCard[0]) {\n                setMainCard(deleteCard[0]);\n                const todosMain = allTodos.filter(t => t.card_id === deleteCard[0].card_id && t.todo_title !== null);\n                setMainTodos(todosMain);\n            } else {\n                setMainCard({});\n                setMainTodos([]);\n            }*/\n\n\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const createTodo = async(e) => {\n        e.preventDefault();\n\n        if(todoName === '') {\n            return;\n        }\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const body = {todoName, cardId};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            setMainTodos([...mainTodos, parseRes.rows[0]]);\n            setAllTodos([...allTodos, parseRes.rows[0]]);\n            setTodoName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const todoId = e.target.parentElement.parentElement.id;\n        const body = { cardId, todoId };\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteTodo = mainTodos.filter(t => t.todo_id !== parseInt(todoId));\n            setMainTodos(deleteTodo);\n            const deleteAllTodo = allTodos.filter(t => t.todo_id !== parseInt(todoId));\n            setAllTodos(deleteAllTodo);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const viewCard = (e) => {\n\n        const cardIndex = allCards.findIndex(c => c.card_id === parseInt(e.target.parentElement.id));\n        setMainCard(allCards[cardIndex]);        \n        console.log(e.target.parentElement.id);\n        //toggle if view card is true, if it is return main todos instead of cardlist\n        setViewTodos(true);\n    }\n\n    const viewCardList = () => {\n        setViewTodos(false)\n    }\n\n    \n\n    return (\n        <Fragment>\n            {\n                viewTodos ? (\n                    <Fragment>\n                        <div id=\"todo-top\" onClick={viewCardList}>\n                            {}\n                        </div> \n                        <div id=\"todo-bottom\">\n                            { \n\n                            }\n                            <form onSubmit={createTodo}>\n                                <input value={todoName} type=\"text\" name=\"todo\" placeholder=\"Todo title\" onChange={e => setTodoName(e.target.value)}></input>\n                                <button>Create Todo</button>\n                            </form>\n                        </div>\n                    </Fragment>\n                ) : (\n                    <Fragment>\n                        <div id=\"cards-top-wrap\">\n                            <span>Hello, {username}</span>\n                        </div>\n                        <div id=\"cards-bot-wrap\">\n                            <CardList allCards={allCards} setAllCards={setAllCards} deleteCard={deleteCard} viewCard={viewCard} />\n                        </div>\n                        <div id=\"cards-footer\">\n                            <form onSubmit={createCard}>\n                                    <input value={cardName} type=\"text\" name=\"card\" placeholder=\"Card title\" onChange={e => setCardName(e.target.value)}></input>\n                                    <button>Create Card</button>\n                            </form>\n                            <button onClick={logout}>Logout</button>\n                        </div>\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    );\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}