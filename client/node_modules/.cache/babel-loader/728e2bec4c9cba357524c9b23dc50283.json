{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport CardList from './CardList';\nimport EditTodo from './EditTodo';\nimport '../styles/todo.css';\nimport { ReactComponent as Delete } from \"@svgr/webpack?-svgo,+titleProp,+ref!../imgs/delete.svg\";\nimport { ReactComponent as Back } from \"@svgr/webpack?-svgo,+titleProp,+ref!../imgs/back.svg\";\n\nconst Todos = ({\n  setAuth\n}) => {\n  _s();\n\n  const [cardName, setCardName] = useState('');\n  const [todoName, setTodoName] = useState('');\n  const [mainCard, setMainCard] = useState({});\n  const [viewTodos, setViewTodos] = useState(false);\n  const [username, setUsername] = useState('');\n  const [allCards, setAllCards] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/todos\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const [cards, todos] = await res.json();\n      const listCards = cards.filter(c => c.card_id !== null);\n\n      if (listCards.length > 0) {\n        setMainCard(listCards[0]);\n\n        for (let i = 0; i < listCards.length; i++) {\n          listCards[i].todos = todos.filter(t => t.card_id === listCards[i].card_id && t.todo_title !== null);\n        }\n\n        setAllCards(listCards);\n      }\n\n      setUsername(cards[0].user_name);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n\n  const createCard = async e => {\n    e.preventDefault();\n\n    if (cardName === '') {\n      return;\n    }\n\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const body = {\n      cardName\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      let parseRes = await res.json();\n      parseRes[0].todos = [];\n      setAllCards([...allCards, parseRes[0]]);\n      setCardName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteCard = async e => {\n    e.stopPropagation();\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = e.currentTarget.parentElement.parentElement.id;\n    const body = {\n      cardId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json();\n      const deleteCard = allCards.filter(c => c.card_id !== parseInt(cardId));\n      setAllCards(deleteCard);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createTodo = async e => {\n    e.preventDefault();\n\n    if (todoName === '') {\n      return;\n    }\n\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const body = {\n      todoName,\n      cardId\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json(); //find the right card\n\n      const cardIndex = allCards.findIndex(c => c.card_id === cardId); //create new card \n\n      const newTodos = [...allCards[cardIndex].todos, parseRes.rows[0]];\n      let newCard = { ...allCards[cardIndex]\n      };\n      newCard.todos = newTodos; //create new cards array\n\n      let newCards = [...allCards];\n      newCards[cardIndex] = newCard;\n      setAllCards([...newCards]);\n      setMainCard(newCard);\n      setTodoName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteTodo = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const todoId = e.currentTarget.parentElement.id;\n    const body = {\n      cardId,\n      todoId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json(); // remove from all cards and main card\n      //find the right card\n\n      const cardIndex = allCards.findIndex(c => c.card_id === cardId); //create new card \n\n      const newTodos = allCards[cardIndex].todos.filter(todo => todo.todo_id !== parseInt(todoId));\n      let newCard = { ...allCards[cardIndex]\n      };\n      newCard.todos = newTodos; //create new cards array\n\n      let newCards = [...allCards];\n      newCards[cardIndex] = newCard;\n      setAllCards([...newCards]);\n      setMainCard(newCard);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const viewCard = e => {\n    const cardIndex = allCards.findIndex(c => c.card_id === parseInt(e.currentTarget.parentElement.parentElement.id));\n    setMainCard(allCards[cardIndex]); //toggle if view card is true, if it is return main todos instead of cardlist\n\n    setViewTodos(true);\n  };\n\n  const viewCardList = () => {\n    setViewTodos(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: viewTodos ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todos-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back\",\n        onClick: viewCardList,\n        children: /*#__PURE__*/_jsxDEV(Back, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todo-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"card-name\",\n          children: mainCard.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"num-todo\",\n          children: [mainCard.todos.length, \" Tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todo-bottom\",\n        children: mainCard.todos.map(todo => {\n          console.log(todo);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo\",\n            id: todo.todo_id,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-prior\",\n              children: todo.todo_priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-title\",\n              children: todo.todo_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(EditTodo, {\n                setMainCard: setMainCard,\n                allCards: allCards,\n                setAllCards: setAllCards,\n                todo: todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                onClick: deleteTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 45\n            }, this)]\n          }, todo.todo_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createTodo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: todoName,\n          type: \"text\",\n          name: \"todo\",\n          placeholder: \"Todo title\",\n          onChange: e => setTodoName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-top-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Hello, \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-bot-wrap\",\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          allCards: allCards,\n          setAllCards: setAllCards,\n          deleteCard: deleteCard,\n          viewCard: viewCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createCard,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: cardName,\n            type: \"text\",\n            name: \"card\",\n            placeholder: \"Card title\",\n            onChange: e => setCardName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"a2abu05pgVjuTyE+8UL6udKCynA=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js"],"names":["React","useEffect","useState","Fragment","CardList","EditTodo","Todos","setAuth","cardName","setCardName","todoName","setTodoName","mainCard","setMainCard","viewTodos","setViewTodos","username","setUsername","allCards","setAllCards","fetchData","res","fetch","method","headers","token","localStorage","cards","todos","json","listCards","filter","c","card_id","length","i","t","todo_title","user_name","error","console","message","logout","e","preventDefault","removeItem","createCard","jsonHead","Headers","append","body","JSON","stringify","parseRes","deleteCard","stopPropagation","cardId","currentTarget","parentElement","id","parseInt","createTodo","cardIndex","findIndex","newTodos","rows","newCard","newCards","deleteTodo","todoId","todo","todo_id","viewCard","viewCardList","card_name","map","log","todo_priority","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport CardList from './CardList';\nimport EditTodo from './EditTodo';\nimport '../styles/todo.css';\nimport { ReactComponent as Delete } from '../imgs/delete.svg';\nimport { ReactComponent as Back } from '../imgs/back.svg';\n\nconst Todos = ({ setAuth }) => {\n    const [cardName, setCardName] = useState('');\n    const [todoName, setTodoName] = useState('');\n    const [mainCard, setMainCard] = useState({});\n    const [viewTodos, setViewTodos] = useState(false);\n    const [username, setUsername] = useState('');\n    const [allCards, setAllCards] = useState([]);\n\n    const fetchData = async() => {\n        try {\n            const res = await fetch(\"http://localhost:5000/todos\", {\n                method: \"GET\",\n                headers: { token: localStorage.token}\n            });\n\n            const [cards, todos] = await res.json();\n            \n            const listCards = cards.filter(c => c.card_id !== null);\n\n            if(listCards.length > 0) {\n                setMainCard(listCards[0]);\n                \n                for(let i = 0; i < listCards.length; i++) {\n                    listCards[i].todos = todos.filter(t => t.card_id === listCards[i].card_id && t.todo_title !== null);\n                }\n                setAllCards(listCards);\n            }\n\n            setUsername(cards[0].user_name);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(()=> {\n        fetchData();\n    }, []);\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('token');\n        setAuth(false);\n    }\n\n    const createCard = async(e) => {\n        e.preventDefault();\n\n        if(cardName === '') {\n            return;\n        }\n        \n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {cardName};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            let parseRes = await res.json();\n            parseRes[0].todos = [];\n\n            setAllCards([...allCards, parseRes[0]]);\n            setCardName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteCard = async(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = e.currentTarget.parentElement.parentElement.id;\n        const body = {cardId};\n\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteCard = allCards.filter( c => c.card_id !== parseInt(cardId));\n            setAllCards(deleteCard);\n\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const createTodo = async(e) => {\n        e.preventDefault();\n\n        if(todoName === '') {\n            return;\n        }\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const body = {todoName, cardId};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            //find the right card\n            const cardIndex = allCards.findIndex(c => c.card_id === cardId);\n\n            //create new card \n            const newTodos = [...allCards[cardIndex].todos, parseRes.rows[0]];\n            let newCard = {...allCards[cardIndex]};\n            newCard.todos = newTodos;\n\n            //create new cards array\n            let newCards = [...allCards];\n            newCards[cardIndex] = newCard;\n\n            setAllCards([...newCards]);\n            setMainCard(newCard);\n            setTodoName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const todoId = e.currentTarget.parentElement.id;\n        const body = { cardId, todoId };\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            // remove from all cards and main card\n            //find the right card\n            const cardIndex = allCards.findIndex(c => c.card_id === cardId);\n\n            //create new card \n            const newTodos = allCards[cardIndex].todos.filter( todo => todo.todo_id !== parseInt(todoId) );\n            let newCard = {...allCards[cardIndex]};\n            newCard.todos = newTodos;\n\n            //create new cards array\n            let newCards = [...allCards];\n            newCards[cardIndex] = newCard;\n\n            setAllCards([...newCards]);\n            setMainCard(newCard);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const viewCard = (e) => {\n\n        const cardIndex = allCards.findIndex(c => c.card_id === parseInt(e.currentTarget.parentElement.parentElement.id));\n        setMainCard(allCards[cardIndex]);        \n        //toggle if view card is true, if it is return main todos instead of cardlist\n        setViewTodos(true);\n    }\n\n    const viewCardList = () => {\n        setViewTodos(false)\n    }\n\n    return (\n        <Fragment>\n            {\n                viewTodos ? (\n                    <div id=\"todos-wrap\">\n                        <div id=\"back\" onClick={viewCardList}><Back /></div>\n                        <div id=\"todo-top\">\n                            <span id=\"card-name\">{mainCard.card_name}</span>\n                            <span id=\"num-todo\">{mainCard.todos.length} Tasks</span>\n                        </div> \n                        <div id=\"todo-bottom\">\n                            { \n                                mainCard.todos.map( todo => {\n                                    console.log(todo);\n                                    return (\n                                        <div className=\"todo\" id={todo.todo_id} key={todo.todo_id}>\n                                            <span className=\"todo-prior\">{todo.todo_priority}</span>\n                                            <span className=\"todo-title\">{todo.todo_title}</span> \n                                            <div className=\"todo-inputs\">   \n                                                <EditTodo setMainCard={setMainCard} allCards={allCards} setAllCards={setAllCards} todo={todo}/>\n                                                <Delete onClick={deleteTodo}/>\n                                                <input type=\"checkbox\" />\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <form onSubmit={createTodo}>\n                                <input value={todoName} type=\"text\" name=\"todo\" placeholder=\"Todo title\" onChange={e => setTodoName(e.target.value)}></input>\n                                <button>Create Todo</button>\n                            </form>\n                    </div>\n                ) : (\n                    <Fragment>\n                        <div id=\"cards-top-wrap\">\n                            <span>Hello, {username}</span>\n                        </div>\n                        <div id=\"cards-bot-wrap\">\n                            <CardList allCards={allCards} setAllCards={setAllCards} deleteCard={deleteCard} viewCard={viewCard} />\n                        </div>\n                        <div id=\"cards-footer\">\n                            <form onSubmit={createCard}>\n                                    <input value={cardName} type=\"text\" name=\"card\" placeholder=\"Card title\" onChange={e => setCardName(e.target.value)}></input>\n                                    <button>Create Card</button>\n                            </form>\n                            <button onClick={logout}>Logout</button>\n                        </div>\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    );\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}