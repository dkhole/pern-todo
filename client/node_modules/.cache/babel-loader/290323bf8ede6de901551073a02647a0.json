{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport CardList from './CardList';\nimport Card from './Card';\n\nconst Todos = ({\n  setAuth\n}) => {\n  _s();\n\n  const [cardName, setCardName] = useState('');\n  const [cardList, setCardList] = useState([]);\n  const [todoName, setTodoName] = useState('');\n  const [mainCard, setMainCard] = useState({});\n  const [mainTodos, setMainTodos] = useState([]);\n  const [allTodos, setAllTodos] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/todos\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const [cards, todos] = await res.json();\n      setAllTodos(todos);\n      setMainCard(cards[0]);\n      const listCards = cards.filter(c => c.card_id !== null);\n      setCardList(cards);\n      const todosMain = todos.filter(t => t.card_id === cards[0].card_id && t.todo_title !== null);\n      setMainTodos(todosMain);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n\n  const createCard = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const body = {\n      cardName\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      setCardList([...cardList, parseRes[0]]);\n      setCardName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteCard = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = e.target.parentElement.id;\n    const body = {\n      cardId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/card\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json();\n      const deleteCard = cardList.filter(c => c.card_id !== parseInt(cardId));\n      setCardList(deleteCard);\n      setMainCard(deleteCard[0]);\n      const todosMain = allTodos.filter(t => t.card_id === deleteCard[0].card_id && t.todo_title !== null);\n      setMainTodos(todosMain);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createTodo = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const body = {\n      todoName,\n      cardId\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"POST\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      const parseRes = await res.json();\n      setMainTodos([...mainTodos, parseRes.rows[0]]);\n      setAllTodos([...allTodos, parseRes.rows[0]]);\n      setTodoName('');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteTodo = async e => {\n    e.preventDefault();\n    const jsonHead = new Headers();\n    jsonHead.append('Content-type', 'application/json');\n    jsonHead.append('token', localStorage.token);\n    const cardId = mainCard.card_id;\n    const todoId = e.target.parentElement.id;\n    const body = {\n      cardId,\n      todoId\n    };\n\n    try {\n      // eslint-disable-next-line\n      const res = await fetch(\"http://localhost:5000/todos/todo\", {\n        method: \"DELETE\",\n        headers: jsonHead,\n        body: JSON.stringify(body)\n      });\n      await res.json();\n      const deleteTodo = mainTodos.filter(t => t.todo_id !== parseInt(todoId));\n      setMainTodos(deleteTodo);\n      const deleteAllTodo = allTodos.filter(t => t.todo_id !== parseInt(todoId));\n      setAllTodos(deleteAllTodo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const viewCard = e => {\n    const todosMain = allTodos.filter(t => t.card_id === parseInt(e.target.parentElement.id) && t.todo_title !== null);\n    setMainTodos(todosMain);\n    const cardIndex = cardList.findIndex(c => c.card_id === parseInt(e.target.parentElement.id));\n    setMainCard(cardList[cardIndex]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      setTodoName: setTodoName,\n      todoName: todoName,\n      createTodo: createTodo,\n      deleteTodo: deleteTodo,\n      mainCard: mainCard,\n      mainTodos: mainTodos,\n      setMainTodos: setMainTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      setCardList: setCardList,\n      cardList: cardList,\n      deleteCard: deleteCard,\n      viewCard: viewCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCard,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: cardName,\n        type: \"text\",\n        name: \"card\",\n        placeholder: \"Card title\",\n        onChange: e => setCardName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"PRarIhigfCf7no0QKQB9EWqsp2Y=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js"],"names":["React","Fragment","useEffect","useState","CardList","Card","Todos","setAuth","cardName","setCardName","cardList","setCardList","todoName","setTodoName","mainCard","setMainCard","mainTodos","setMainTodos","allTodos","setAllTodos","fetchData","res","fetch","method","headers","token","localStorage","cards","todos","json","listCards","filter","c","card_id","todosMain","t","todo_title","error","console","message","logout","e","preventDefault","removeItem","createCard","jsonHead","Headers","append","body","JSON","stringify","parseRes","deleteCard","cardId","target","parentElement","id","parseInt","createTodo","rows","deleteTodo","todoId","todo_id","deleteAllTodo","viewCard","cardIndex","findIndex","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport CardList from './CardList';\nimport Card from './Card';\n\nconst Todos = ({ setAuth }) => {\n    const [cardName, setCardName] = useState('');\n    const [cardList, setCardList] = useState([]);\n    const [todoName, setTodoName] = useState('');\n    const [mainCard, setMainCard] = useState({});\n    const [mainTodos, setMainTodos] = useState([]); \n    const [allTodos, setAllTodos] = useState([]);\n\n    const fetchData = async() => {\n        try {\n            const res = await fetch(\"http://localhost:5000/todos\", {\n                method: \"GET\",\n                headers: { token: localStorage.token}\n            });\n\n            const [cards, todos] = await res.json();\n\n            setAllTodos(todos);\n            setMainCard(cards[0]);\n\n            const listCards = cards.filter(c => c.card_id !== null);\n            setCardList(cards);\n\n            const todosMain = todos.filter(t => t.card_id === cards[0].card_id && t.todo_title !== null);\n            setMainTodos(todosMain);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(()=> {\n        fetchData();\n    }, []);\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('token');\n        setAuth(false);\n    }\n\n    const createCard = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {cardName};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            setCardList([...cardList, parseRes[0]]);\n            setCardName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteCard = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = e.target.parentElement.id;\n        const body = {cardId};\n\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/card\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteCard = cardList.filter( c => c.card_id !== parseInt(cardId));\n            setCardList(deleteCard);\n\n            setMainCard(deleteCard[0]);\n            const todosMain = allTodos.filter(t => t.card_id === deleteCard[0].card_id && t.todo_title !== null);\n            setMainTodos(todosMain);\n\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const createTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const body = {todoName, cardId};\n\n        try {\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            setMainTodos([...mainTodos, parseRes.rows[0]]);\n            setAllTodos([...allTodos, parseRes.rows[0]]);\n            setTodoName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const todoId = e.target.parentElement.id;\n        const body = { cardId, todoId };\n\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"http://localhost:5000/todos/todo\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteTodo = mainTodos.filter(t => t.todo_id !== parseInt(todoId));\n            setMainTodos(deleteTodo);\n            const deleteAllTodo = allTodos.filter(t => t.todo_id !== parseInt(todoId));\n            setAllTodos(deleteAllTodo);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const viewCard = (e) => {\n\n\n        const todosMain = allTodos.filter(t => t.card_id === parseInt(e.target.parentElement.id) && t.todo_title !== null);\n        setMainTodos(todosMain);\n\n        const cardIndex = cardList.findIndex(c => c.card_id === parseInt(e.target.parentElement.id));\n        setMainCard(cardList[cardIndex]);\n\n    }\n\n    return (\n        <Fragment>\n            <Card setTodoName={setTodoName} todoName={todoName} createTodo={createTodo} deleteTodo={deleteTodo} mainCard={mainCard} mainTodos={mainTodos} setMainTodos={setMainTodos}/>\n            <CardList setCardList={setCardList} cardList={cardList} deleteCard={deleteCard} viewCard={viewCard}/>\n            <form onSubmit={createCard}>\n                <input value={cardName} type=\"text\" name=\"card\" placeholder=\"Card title\" onChange={e => setCardName(e.target.value)}></input>\n                <button>Create Card</button>\n            </form>\n            \n            <button onClick={logout}>Logout</button>\n        </Fragment>\n    );\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}