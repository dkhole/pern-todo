[{"/home/dkhole/Documents/projects/jwt-todo/client/src/index.js":"1","/home/dkhole/Documents/projects/jwt-todo/client/src/App.js":"2","/home/dkhole/Documents/projects/jwt-todo/client/src/components/Landing.js":"3","/home/dkhole/Documents/projects/jwt-todo/client/src/components/Login.js":"4","/home/dkhole/Documents/projects/jwt-todo/client/src/components/Register.js":"5","/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js":"6","/home/dkhole/Documents/projects/jwt-todo/client/src/components/CardList.js":"7","/home/dkhole/Documents/projects/jwt-todo/client/src/components/Card.js":"8","/home/dkhole/Documents/projects/jwt-todo/client/src/components/EditCard.js":"9","/home/dkhole/Documents/projects/jwt-todo/client/src/components/EditTodo.js":"10","/home/dkhole/Documents/projects/pern-todo/client/src/index.js":"11","/home/dkhole/Documents/projects/pern-todo/client/src/App.js":"12","/home/dkhole/Documents/projects/pern-todo/client/src/components/Landing.js":"13","/home/dkhole/Documents/projects/pern-todo/client/src/components/Login.js":"14","/home/dkhole/Documents/projects/pern-todo/client/src/components/Register.js":"15","/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js":"16","/home/dkhole/Documents/projects/pern-todo/client/src/components/CardList.js":"17","/home/dkhole/Documents/projects/pern-todo/client/src/components/Card.js":"18","/home/dkhole/Documents/projects/pern-todo/client/src/components/EditCard.js":"19","/home/dkhole/Documents/projects/pern-todo/client/src/components/EditTodo.js":"20"},{"size":177,"mtime":1611028032183,"results":"21","hashOfConfig":"22"},{"size":1635,"mtime":1613363621844,"results":"23","hashOfConfig":"22"},{"size":526,"mtime":1613692666075,"results":"24","hashOfConfig":"22"},{"size":1884,"mtime":1613692672427,"results":"25","hashOfConfig":"22"},{"size":1723,"mtime":1613692679291,"results":"26","hashOfConfig":"22"},{"size":6481,"mtime":1613954166057,"results":"27","hashOfConfig":"22"},{"size":639,"mtime":1613693098719,"results":"28","hashOfConfig":"22"},{"size":1796,"mtime":1613954830189,"results":"29","hashOfConfig":"22"},{"size":2407,"mtime":1611301036164,"results":"30","hashOfConfig":"22"},{"size":4220,"mtime":1611321620612,"results":"31","hashOfConfig":"22"},{"size":177,"mtime":1611028032183,"results":"32","hashOfConfig":"33"},{"size":1609,"mtime":1615157962343,"results":"34","hashOfConfig":"33"},{"size":407,"mtime":1614825223959,"results":"35","hashOfConfig":"33"},{"size":1830,"mtime":1614824051883,"results":"36","hashOfConfig":"33"},{"size":1670,"mtime":1614745668061,"results":"37","hashOfConfig":"33"},{"size":9494,"mtime":1614824086731,"results":"38","hashOfConfig":"33"},{"size":1618,"mtime":1614323791001,"results":"39","hashOfConfig":"33"},{"size":1796,"mtime":1613954830189,"results":"40","hashOfConfig":"41"},{"size":2403,"mtime":1614737176469,"results":"42","hashOfConfig":"33"},{"size":4655,"mtime":1614737163841,"results":"43","hashOfConfig":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dtw1gv",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"cscxwh",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8m4a99",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/home/dkhole/Documents/projects/jwt-todo/client/src/index.js",[],["87","88"],"/home/dkhole/Documents/projects/jwt-todo/client/src/App.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Landing.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Login.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Register.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Todos.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/CardList.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/Card.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/EditCard.js",[],"/home/dkhole/Documents/projects/jwt-todo/client/src/components/EditTodo.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/index.js",[],["89","90"],"/home/dkhole/Documents/projects/pern-todo/client/src/App.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/Landing.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/Login.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/Register.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/Todos.js",["91"],"import React, { useEffect, useState, Fragment } from 'react';\nimport CardList from './CardList';\nimport EditTodo from './EditTodo';\nimport '../styles/todo.css';\nimport { ReactComponent as Delete } from '../imgs/delete.svg';\nimport { ReactComponent as Back } from '../imgs/back.svg';\n\nconst Todos = ({ setAuth }) => {\n    const [cardName, setCardName] = useState('');\n    const [todoName, setTodoName] = useState('');\n    const [mainCard, setMainCard] = useState({});\n    const [viewTodos, setViewTodos] = useState(false);\n    const [username, setUsername] = useState('');\n    const [allCards, setAllCards] = useState([]);\n\n    const fetchData = async() => {\n        try {\n            console.log(localStorage);\n            const res = await fetch(\"/todos\", {\n                method: \"GET\",\n                headers: { token: localStorage.token}\n            });\n\n            const [cards, todos] = await res.json();\n            \n            const listCards = cards.filter(c => c.card_id !== null);\n\n            if(listCards.length > 0) {\n                setMainCard(listCards[0]);\n                \n                for(let i = 0; i < listCards.length; i++) {\n                    listCards[i].todos = todos.filter(t => t.card_id === listCards[i].card_id && t.todo_title !== null);\n                }\n                setAllCards(listCards);\n            }\n\n            setUsername(cards[0].user_name);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(()=> {\n        fetchData();\n    }, []);\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('token');\n        setAuth(false);\n    }\n\n    const createCard = async(e) => {\n        e.preventDefault();\n\n        if(cardName === '') {\n            return;\n        }\n        \n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n\n        const body = {cardName};\n\n        try {\n            const res = await fetch(\"/todos/card\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            let parseRes = await res.json();\n            parseRes[0].todos = [];\n\n            setAllCards([...allCards, parseRes[0]]);\n            setCardName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteCard = async(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = e.currentTarget.parentElement.parentElement.id;\n        const body = {cardId};\n\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"/todos/card\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            const deleteCard = allCards.filter( c => c.card_id !== parseInt(cardId));\n            setAllCards(deleteCard);\n\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const createTodo = async(e) => {\n        e.preventDefault();\n\n        if(todoName === '') {\n            return;\n        }\n\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const body = {todoName, cardId};\n\n        try {\n            const res = await fetch(\"/todos/todo\", {\n                method: \"POST\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await res.json();\n            //find the right card\n            const cardIndex = allCards.findIndex(c => c.card_id === cardId);\n\n            //create new card \n            const newTodos = [...allCards[cardIndex].todos, parseRes.rows[0]];\n            let newCard = {...allCards[cardIndex]};\n            newCard.todos = newTodos;\n\n            //create new cards array\n            let newCards = [...allCards];\n            newCards[cardIndex] = newCard;\n\n            setAllCards([...newCards]);\n            setMainCard(newCard);\n            setTodoName('');\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const deleteTodo = async(e) => {\n        e.preventDefault();\n        const jsonHead = new Headers();\n        jsonHead.append('Content-type', 'application/json');\n        jsonHead.append('token', localStorage.token);\n        const cardId = mainCard.card_id;\n        const todoId = e.currentTarget.parentElement.parentElement.id;\n        const body = { cardId, todoId };\n        try {\n            // eslint-disable-next-line\n            const res = await fetch(\"/todos/todo\", {\n                method: \"DELETE\",\n                headers: jsonHead,\n                body: JSON.stringify(body)\n            });\n\n            await res.json();\n            // remove from all cards and main card\n            //find the right card\n            const cardIndex = allCards.findIndex(c => c.card_id === cardId);\n\n            //create new card \n            const newTodos = allCards[cardIndex].todos.filter( todo => todo.todo_id !== parseInt(todoId) );\n            let newCard = {...allCards[cardIndex]};\n            newCard.todos = newTodos;\n\n            //create new cards array\n            let newCards = [...allCards];\n            newCards[cardIndex] = newCard;\n\n            setAllCards([...newCards]);\n            setMainCard(newCard);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const viewCard = (e) => {\n\n        const cardIndex = allCards.findIndex(c => c.card_id === parseInt(e.currentTarget.parentElement.parentElement.id));\n        setMainCard(allCards[cardIndex]);        \n        //toggle if view card is true, if it is return main todos instead of cardlist\n        setViewTodos(true);\n    }\n\n    const viewCardList = () => {\n        setViewTodos(false)\n    }\n\n    const getColor = (todoPriority) => {\n        switch (todoPriority) {\n            case 0: \n                return 'prior low';\n            case 1:\n                return 'prior med';\n            case 2: \n                return 'prior high';\n        }\n    }\n\n    return (\n        <Fragment>\n            {\n                viewTodos ? (\n                    <div id=\"todos-wrap\">\n                        <div id=\"back\" onClick={viewCardList}><Back /></div>\n                        <div id=\"todo-top\">\n                            <span id=\"card-name\">{mainCard.card_name}</span>\n                            <span id=\"num-todo\">{mainCard.todos.length} Tasks</span>\n                        </div> \n                        <div id=\"todo-bottom\">\n                            { \n                                mainCard.todos.map( todo => {\n                                    const priorCol = getColor(todo.todo_priority);\n                                    return (\n                                        <div className=\"todo\" id={todo.todo_id} key={todo.todo_id}>\n                                            <div className='todo-prior'>\n                                                <div className={priorCol} ></div>\n                                            </div>\n                                            <span className=\"todo-title\">{todo.todo_title}</span> \n                                            <div className=\"todo-inputs\">   \n                                                <EditTodo setMainCard={setMainCard} allCards={allCards} setAllCards={setAllCards} todo={todo}/>\n                                                <Delete onClick={deleteTodo}/>\n                                                <input type=\"checkbox\" />\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <form id=\"todo-inp\" onSubmit={createTodo}>\n                            <input value={todoName} type=\"text\" name=\"todo\" placeholder=\"Todo title\" onChange={e => setTodoName(e.target.value)}></input>\n                            <button>Create Todo</button>\n                        </form>\n                    </div>\n                ) : (\n                    <Fragment>\n                        <div id=\"cards-top-wrap\">\n                            <span>Hello, {username}</span>\n                        </div>\n                        <div id=\"cards-bot-wrap\">\n                            <CardList allCards={allCards} setAllCards={setAllCards} deleteCard={deleteCard} viewCard={viewCard} />\n                        </div>\n                        <div id=\"cards-footer\">\n                            <form onSubmit={createCard}>\n                                    <input value={cardName} type=\"text\" name=\"card\" placeholder=\"Card title\" onChange={e => setCardName(e.target.value)}></input>\n                                    <button>Create Card</button>\n                            </form>\n                            <button onClick={logout}>Logout</button>\n                        </div>\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    );\n}\n\nexport default Todos;","/home/dkhole/Documents/projects/pern-todo/client/src/components/CardList.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/Card.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/EditCard.js",[],"/home/dkhole/Documents/projects/pern-todo/client/src/components/EditTodo.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":201,"column":9,"nodeType":"100","messageId":"101","endLine":208,"endColumn":10},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]